{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setusers","name","setname","sortDir","setsortDir","useEffect","axios","get","then","data","results","className","value","onChange","e","target","filter","user","first","includes","map","dob","age","onClick","newUsers","sort","a","b","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA4CeA,MAzCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAuBb,OAnBAC,qBAAU,WACRC,IAAMC,IAAI,yCAAyCC,MAAK,SAAAC,GACtDT,EAASS,EAAKA,KAAKC,cAEpB,IAgBD,sBAAKC,UAAU,MAAf,UACE,uBAAOC,MAAOX,EAAMY,SAhBJ,SAACC,GACnBZ,EAAQY,EAAEC,OAAOH,UAgBdb,EAAMiB,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,KAAKiB,MAAMC,SAASlB,MAAOmB,KAAI,SAAAH,GAAI,OAC5D,8BACE,+BACE,sCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMhB,KAAKiB,MAAhB,IAAwBD,EAAKI,IAAIC,OACjC,qDAIN,wBAAQC,QAtBQ,WAClB,IAAIC,EAEFA,EADErB,EACS,YAAIJ,GAAO0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,IAAIC,IAAMK,EAAEN,IAAIC,OAE5C,YAAIvB,GAAO0B,MAAK,SAACE,EAAGD,GAAJ,OAAUA,EAAEL,IAAIC,IAAMK,EAAEN,IAAIC,OAEzDlB,GAAYD,GACZyB,QAAQC,IAAIL,GACZxB,EAASwB,IAaP,2BCzBSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08d58116.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport './App.css';\nimport axios from \"axios\"\nfunction App() {\n  const [users, setusers] = useState([])\n  const [name, setname] = useState(\"\")\n  const [sortDir, setsortDir] = useState(true)\n  useEffect(() => {\n    axios.get('https://randomuser.me/api/?results=10').then(data => {\n      setusers(data.data.results)\n    })\n  }, [])\n  const setnamefunc = (e) => {\n    setname(e.target.value)\n  }\n  const sortAgeFunc = () => {\n    let newUsers;\n    if (sortDir) {\n      newUsers = [...users].sort((a, b) => a.dob.age - b.dob.age)\n    } else {\n      newUsers = [...users].sort((b, a) => a.dob.age - b.dob.age)\n    }\n    setsortDir(!sortDir)\n    console.log(newUsers);\n    setusers(newUsers)\n  }\n  return (\n    <div className=\"App\">\n      <input value={name} onChange={setnamefunc}></input>\n      {users.filter(user => user.name.first.includes(name)).map(user => (\n        <div>\n          <tr>\n            <td>{user?.name.first} {user.dob.age}</td>\n            <td>Hello World</td>\n          </tr>\n        </div>\n      ))}\n      <button onClick={sortAgeFunc}>\n        sortbyAge\n    </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}